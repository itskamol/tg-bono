version: '3.8'

services:
  # MongoDB with replica set
  mongodb:
    image: mongo:7.0
    container_name: tg-bono-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-tg-bono}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: mongod --replSet rs0 --bind_ip_all --auth
    networks:
      - tg-bono-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB replica set initialization
  mongo-init:
    image: mongo:7.0
    container_name: tg-bono-mongo-init
    depends_on:
      mongodb:
        condition: service_healthy
    restart: "no"
    environment:
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
    command: >
      bash -c "
        sleep 10 &&
        mongosh --host mongodb:27017 -u $${MONGO_ROOT_USERNAME} -p $${MONGO_ROOT_PASSWORD} --authenticationDatabase admin --eval \"
          try {
            rs.status();
            print('Replica set already initialized');
          } catch(e) {
            print('Initializing replica set...');
            rs.initiate({
              _id: 'rs0',
              members: [
                { _id: 0, host: 'mongodb:27017' }
              ]
            });
            print('Replica set initialized');
          }
        \"
      "
    networks:
      - tg-bono-network

  # Telegram Bot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tg-bono-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-tg-bono}?authSource=admin&replicaSet=rs0
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SUPER_ADMIN_ID=${SUPER_ADMIN_ID}
    depends_on:
      mongodb:
        condition: service_healthy
      mongo-init:
        condition: service_completed_successfully
    networks:
      - tg-bono-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  app_logs:
    driver: local

networks:
  tg-bono-network:
    driver: bridge
